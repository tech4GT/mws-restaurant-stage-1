let restaurants,neighborhoods,cuisines;var map,markers=[];function isElementInViewport(e){var t=e.getBoundingClientRect();return t.top>=0&&t.top<=(window.innerHeight||document.documentElement.clientHeight)||t.bottom>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)}function lazyLoadImages(){var e=document.querySelectorAll("img[data-src]");[].forEach.call(e,function(e){isElementInViewport(e)&&(e.setAttribute("src",e.getAttribute("data-src")),e.removeAttribute("data-src"))}),0==e.length&&(window.removeEventListener("DOMContentLoaded",lazyLoadImages),window.removeEventListener("load",lazyLoadImages),window.removeEventListener("resize",lazyLoadImages),window.removeEventListener("scroll",lazyLoadImages))}fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML()),fetchCuisines()})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML()),updateRestaurants()})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),window.initMap=(()=>{"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)},function(e){console.log("ServiceWorker registration failed: ",e)})}),self.indexedDB?DBHelper.createDB():self.alert("Your browser doesn't support a stable version of IndexedDB. Offline feature will not be available.");self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1});const e=document.getElementById("map");e.setAttribute("role","application"),e.setAttribute("tabindex",0),window.addEventListener("load",fetchNeighborhoods),window.addEventListener("DOMContentLoaded",lazyLoadImages),window.addEventListener("load",lazyLoadImages),window.addEventListener("resize",lazyLoadImages),window.addEventListener("scroll",lazyLoadImages)}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,a=t.selectedIndex,s=e[n].value,r=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(s,r,(e,t)=>{e?console.error(e):(console.log(t),resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap(),lazyLoadImages(),window.addEventListener("DOMContentLoaded",lazyLoadImages),window.addEventListener("load",lazyLoadImages),window.addEventListener("resize",lazyLoadImages),window.addEventListener("scroll",lazyLoadImages)}),createRestaurantHTML=(e=>{const t=document.createElement("li"),n=document.createElement("img");n.className="restaurant-img";const a=DBHelper.imageUrlForRestaurant(e);a&&n.setAttribute("data-src",a),n.alt=`Restaurant ${e.name}`,t.append(n);const s=document.createElement("h2");s.innerHTML=e.name,t.append(s);const r=document.createElement("i");DBHelper.getDB(t=>{t.transaction("favs").objectStore("favs").get(parseInt(e.id)).onsuccess=function(n){n.target.result.starred?r.setAttribute("class","fa fa-star"):r.setAttribute("class","fa fa-star-o");var a=n.target.result.starred;r.addEventListener("click",function(){a=!a;var n=this,s=["fa fa-star","fa fa-star-o"];t.transaction("favs","readwrite").objectStore("favs").put({id:e.id,starred:a}).onsuccess=(()=>{n.setAttribute("class",s[(s.indexOf(this.getAttribute("class"))+1)%2])})})}}),t.append(r);const o=document.createElement("p");o.innerHTML=e.neighborhood,t.append(o);const i=document.createElement("p");i.innerHTML=e.address,t.append(i);const d=document.createElement("a");return d.innerHTML="View Details",d.href=DBHelper.urlForRestaurant(e),t.append(d),d.tabIndex=0,t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});