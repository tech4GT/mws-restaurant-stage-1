class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){fetch(DBHelper.DATABASE_URL).then(t=>{if(200===t.status)t.json().then(t=>{e(null,t)});else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}).catch(t=>{DBHelper.getDB(t=>{var n=t.transaction("restaurants").objectStore("restaurants"),r=[];n.openCursor().onsuccess=function(t){var n=t.target.result;n?(r.push(n.value),n.continue()):(console.log("Read all restaurants from database"),console.log(r),e(null,r))}})})}static fetchRestaurantById(e,t){fetch(`${DBHelper.DATABASE_URL}/${e}`).then(e=>{if(console.log("then"),200==e.status)e.json().then(e=>{console.log(e),t(null,e)});else if(404==e.status)t(`Restaurant does not exist. Returned status of ${e.status}`,null);else{const n=`Request failed. Returned status of ${e.status}`;t(n,null)}}).catch(n=>{console.log("err"),DBHelper.getDB(n=>{n.transaction("restaurants").objectStore("restaurants").get(parseInt(e)).onsuccess=function(e){t(null,e.target.result)}})})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){if(null!=e.photograph)return`/img/${e.photograph}.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static createDB(){fetch("http://localhost:1337/restaurants").then(e=>{e.json().then(e=>{var t=window.indexedDB.open("restaurantsDB",1);t.onerror=function(e){console.err(`Bad request with error code ${t.errorCode}`)},t.onsuccess=function(e){DBHelper.db=e.target.result},t.onupgradeneeded=function(t){DBHelper.db=t.target.result;var n=DBHelper.db,r=n.createObjectStore("restaurants",{keyPath:"id"});r.createIndex("neighborhood","neighborhood",{unique:!1}),r.createIndex("cuisine_type","cuisine_type",{unique:!1}),r.transaction.oncomplete=function(t){var r=n.transaction("restaurants","readwrite").objectStore("restaurants");e.forEach(function(e){r.add(e)})}}})}).catch(e=>{var t=window.indexedDB.open("restaurantsDB");t.onerror=function(e){console.err(`Bad request with error code ${t.errorCode}`)},t.onsuccess=function(e){DBHelper.db=e.target.result}})}static getDB(e){var t=window.indexedDB.open("restaurantsDB");t.onerror=function(e){console.err(`Bad request with error code ${t.errorCode}`)},t.onsuccess=function(t){DBHelper.db=t.target.result,e(DBHelper.db)}}}let restaurant;var map;"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.min.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)},function(e){console.log("ServiceWorker registration failed: ",e)})}),window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-img").alt=`Restaurant ${e.name}`,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const s=document.createElement("td");s.innerHTML=e[n],r.appendChild(s),t.appendChild(r)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=e.date,t.appendChild(r);const a=document.createElement("p");a.innerHTML=`Rating: ${e.rating}`,t.appendChild(a);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});